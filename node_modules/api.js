var mysql = require('mysql');
var request = require('request');
var querystring = require('querystring');

var openEHR = {
  servers: {
    marand: 'https://ehrscape.code-4-health.org',
    ethercis: 'http://188.166.246.78:8080'
  },
  nhsNoMap: {}
};

function connectToMySQL(finished) {
  var con = mysql.createConnection({
    host: "localhost",
    user: "root",
    password: "password",
    database: 'poc_legacy'
  });

  con.connect(function(err){
    if (err) {
      finished({error: 'Unable to connect to MySQL: ' + err});
      return;
    }
    console.log('Connected to MySQL');
  });
  return con;
}

function disconnectFromMySQL(connection) {
  console.log('Disconnected from MySQL');
  connection.end();
}

function getDepartments(connection, finished, callback) {
  connection.query('SELECT * FROM medical_departments',function(err,depts){
    if(err) {
      disconnectFromMySQL(connection);
      finished({error: 'MySQL query error: ' + err});
      return;
    }
    var departments = {};
    depts.forEach(function(dept) {
      departments[dept.id] = dept.department;
    });
    callback(departments, connection, finished);
  });
}

function getAllPatients(departments, connection, finished) {
  connection.query('SELECT * FROM patients',function(err,rows){
    if(err) {
      disconnectFromMySQL(connection);
      finished({error: 'MySQL query error: ' + err});
      return;
    }
    disconnectFromMySQL(connection);
    var patients = [];
    rows.forEach(function(row) {
      var patient = {};
      patient.id = row.nhs_number;
      patient.nhsNumber = row.nhs_number;
      patient.name = row.first_name + ' ' + row.last_name;
      var address = '';
      var comma = ' ';
      if (row.address_1) {
        address = row.address_1;
        comma = ', ';
      }
      if (row.address_2) {
        address = address + comma + row.address_2;
        comma = ', ';
      }
      if (row.address_3) {
        address = address + comma + row.address_3;
        comma = ', ';
      }
      if (row.address_4) {
        address = address + comma + row.address_4;
        comma = ', ';
      }
      if (row.address_5) {
        address = address + comma + row.address_5;
        comma = ', ';
      }
      if (row.postcode) {
        address = address + comma + row.postcode;
        comma = ', ';
      }
      patient.address = address;
      patient.dateOfBirth = new Date(row.date_of_birth).getTime();
      patient.gender = row.gender;
      patient.department = departments[row.department_id];
      patients.push(patient);    
    });
    finished(patients);
  });
}

function getPatients(finished) {
  var connection = connectToMySQL(finished);
  getDepartments(connection, finished, function(departments, connection, finished) {
    getAllPatients(departments, connection, finished);
  });
}

function getOpenEHRSessions(username, password, callback) {
  var params = {
    callback: callback,
    url: '/rest/v1/session',
    //queryString: 'username=' + username + '&password=' + password,
    queryString: {
      username: username,
      password: password
    },
    method: 'POST',
    useSessionId: false
  };
  params.processBody = function(body, host) {
    if (!openEHR.sessions) openEHR.sessions = {};
    openEHR.sessions[host] = body.sessionId;
  };
  openEHRRequest(params);
}

function getOpenEHRId(nhsNo, callback) {
  var params = {
    callback: callback,
    url: '/rest/v1/ehr',
    //queryString: 'subjectId=' + nhsNo + '&subjectNamespace=uk.nhs.nhs_number',
    queryString: {
      subjectId: nhsNo,
      subjectNamespace: 'uk.nhs.nhs_number'
    },
    method: 'GET'
  };
  params.processBody = function(body, host) {
    if (!openEHR.nhsNoMap[nhsNo]) openEHR.nhsNoMap[nhsNo] = {};
    openEHR.nhsNoMap[nhsNo][host] = body.ehrId;
  };
  openEHRRequest(params);
}

function getPatientSummary(nhsNo, callback) {

  var ready = {
    allergies: false,
    medications: true,
    problems: true,
    contacts: true
  };
  var results = {
    problems: [],
    medications: [],
    contacts: [],
    transfers: []
  };

  getAllergies(nhsNo, function(allergies) {
    ready.allergies = true;
    results.allergies = [];
    for (var host in allergies) {
      allergies[host].forEach(function(allergy) {
        results.allergies.push(allergy);
      });
    }
    if (ready.allergies && ready.medications && ready.problems && ready.contacts) callback(results);
  });
}

function getAllergies(nhsNo, callback) {
  var params = {
    callback: callback,
    url: '/rest/v1/query',
    method: 'GET'
  };
   
  var query1;
  var query2;
  var queryType;
  var patientId;
  params.hostSpecific = {};
  for (var host in openEHR.servers) {
    params.hostSpecific[host] = {
      qs: {}
    };

    if (host === 'ethercis') {
      query1 = "SELECT ehr.entry.composition_id as uid, ehr.entry.entry #>> '{/composition[openEHR-EHR-COMPOSITION.adverse_reaction_list.v1 and name/value=''Adverse reaction list''], /content[openEHR-EHR-SECTION.allergies_adverse_reactions_rcp.v1],0, /items[openEHR-EHR-EVALUATION.adverse_reaction_risk.v1],0,/data[at0001],/items[at0002 and name/value=''Causative agent''],/value,value}' as cause, ehr.event_context.start_time FROM ehr.entry INNER JOIN ehr.composition ON ehr.composition.id = ehr.entry.composition_id INNER JOIN ehr.event_context ON ehr.event_context.composition_id = ehr.entry.composition_id WHERE (ehr.composition.ehr_id = '";
      query2 = "') AND (ehr.entry.archetype_Id = 'openEHR-EHR-COMPOSITION.adverse_reaction_list.v1') ORDER BY ehr.event_context.start_time DESC;";
      queryType = 'sql';
      patientId = openEHR.nhsNoMap[nhsNo][host];
    }
    else {
      query1 = "select     a/uid/value as uid,     b_a/data[at0001]/items[at0002]/value/value as cause,     b_a/data[at0001]/items[at0002]/value/defining_code/code_string as cause_code,     b_a/data[at0001]/items[at0002]/value/defining_code/terminology_id/value as cause_terminology,     b_a/data[at0001]/items[at0009]/items[at0011]/value/value as reaction from EHR e contains COMPOSITION a[openEHR-EHR-COMPOSITION.adverse_reaction_list.v1] contains EVALUATION b_a[openEHR-EHR-EVALUATION.adverse_reaction_risk.v1] where a/name/value='Allergies list' and e/ehr_status/subject/external_ref/namespace = 'uk.nhs.nhs_number' and e/ehr_status/subject/external_ref/id/value = '";
      query2 = "'";
      queryType = 'aql';
      patientId = nhsNo
    }

    params.hostSpecific[host]['qs'][queryType] = query1 + patientId + query2;

  }

  params.processBody = function(body, host, results) {
    /*
    "allergies": [{
        "sourceId": "b38d4067-aa8a-49a4-8e82-9ff2210fa7ed",
        "source": "EtherCIS",
        "text": "hvj"
    }],
    */
    var allergies = [];
    body.resultSet.forEach(function(allergy) {
      var record = {
        sourceId: allergy.uid.split(':')[0],
        text: allergy.cause
      };
      if (host === 'ethercis') record.source = 'EtherCIS';
      if (host === 'marand') record.source = 'Marand';    
      allergies.push(record);
    });

    results[host] = allergies;
  };

  openEHRRequest(params);

}

function openEHRRequest(params) {
  var results = {};
  var noOfServers = 0;
  for (var host in openEHR.servers) {
    noOfServers++;
  }
  var count = 0;
  var options;
  var url;
  for (var host in openEHR.servers) {
    url = openEHR.servers[host] + params.url;
    options = {
      url: url,
      method: params.method || 'GET',
      json: true
    };
    if (params.useSessionId !== false) {
      options.headers = {
        'Ehr-Session': openEHR.sessions[host]
      }
    }
    if (params.queryString) options.qs = params.queryString;
    if (params.hostSpecific) {
      for (var param in params.hostSpecific[host]) {
        options[param] = params.hostSpecific[host][param];
      }
    }
    console.log('request to ' + host + ': ' + JSON.stringify(options));
    (function(host) {
      request(options, function(error, response, body) {
        count++;
        console.log('response from ' + host + ': ' + JSON.stringify(body));
        if (params.processBody) params.processBody(body, host, results);
        if (count === noOfServers && params.callback) params.callback(results);
      });
    }(host));
  }
}

function getPatient(nhsNo, finished) {
  if (!openEHR.sessions) {
    var username = 'c4h_ripple_osi';
    var password = 'InDeCoMP';
    getOpenEHRSessions(username, password, function() {
      // try again now we have sessions set up
      getPatient(nhsNo, finished);
    });
  }
  else {
    if (!openEHR.nhsNoMap[nhsNo]) {
      getOpenEHRId(nhsNo, function() {
      // try again now can map the NHS No
      getPatient(nhsNo, finished);
    });
    }
    else {
      getPatientSummary(nhsNo, function(patientSummary) {
        finished(patientSummary);
      });
      console.log('openEHR Sessions: ' + JSON.stringify(openEHR));
    }
  }
}

module.exports = {

  restModule: true,

  handlers: {

    patients: function(messageObj, finished) {

      if (messageObj.params && messageObj.params['0']) {
        if (messageObj.params['0'] !== '') {
          var nhsNo = messageObj.params['0'];
          getPatient(nhsNo, finished);
          return;
        }
        finished({error: 'Missing patient Id'});
        return;
      }
      // no patient Id specified, so fetch entire list
      getPatients(finished);
    }
  }
};

